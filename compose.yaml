---
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:7.2.2
    container_name: kafka-dc
    ports:
      - 9992:9992
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181      
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9993,EXTERNAL://localhost:9992
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  
  kafka-connect:
    image: confluentinc/cp-kafka-connect-base:7.2.2
    container_name: kafka-connect
    depends_on:
      - kafka
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9993"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.converters.ByteArrayConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.converters.ByteArrayConverter
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:v22.2.5
    container_name: redpanda
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp 1
      - --node-id 1
      - --kafka-addr
      - INTERNAL://0.0.0.0:9093,EXTERNAL://0.0.0.0:9092
      - --advertise-kafka-addr
      - INTERNAL://redpanda:9093,EXTERNAL://localhost:9092      
    ports:    
      - 9092:9092
  console:
    image: docker.redpanda.com/vectorized/console:v2.0.2
    container_name: redpanda-console
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        redpanda:
          adminApi:
            enabled: true
            urls:
              - "http://redpanda:9644"
        kafka:
          brokers:
            - "redpanda:9093"
          schemaRegistry:
            enabled: true
            urls:
              - "http://redpanda:8081"
        connect:
          enabled: true
          clusters:
            - name: kafka-connect
              url: http://kafka-connect:8083
          connectTimeout: 15s
          readTimeout: 60s
          requestTimeout: 6s
    ports:
      - 8080:8080
    depends_on:
      - redpanda
      - kafka-connect
